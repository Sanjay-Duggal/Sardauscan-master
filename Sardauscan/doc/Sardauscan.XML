<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sardauscan</name>
    </assembly>
    <members>
        <member name="T:Sardauscan.Gui.OpenGL.Scene3DControl">
            <summary>
            3D Scene Viewer
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.IScene3DViewer">
            <summary>
            Interface for a Scene3D viewer
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DViewer.Invalidate">
            <summary>
            Invalidate the render ( ask redraw)
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.IScene3DViewer.Scene">
            <summary>
            Get set the scene
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.IScene3DViewer.Drag">
            <summary>
            the dragBall navidator associated with the Render
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.OpenGL.Scene3DControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.Scene3DControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.Scene3DControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.Scene3DControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.AbstractProxyProvider`1">
            <summary>
            Abstract class for a T IHardwareProxy
            T must be a class that implement IHardwareInterface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Sardauscan.Core.Interface.IHardwareProxyProvider">
            <summary>
            Basic interface fo a IHardwareProxy provider
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IHardwareProxyProvider.Select(System.Windows.Forms.IWin32Window)">
            <summary>
            This function is call when the user request a instance of ther IHardwareProxy
            You can call winforms to as information ( Com port, configuration etc)
            </summary>
            <param name="owner">owner window</param>
            <returns>a IHardwareProxy if one is selected, Null in case of cancel or not disponible</returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.IHardwareProxyProvider.Name">
            <summary>
            Display name of the Provider, for the user to know what he select;)
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.IHardwareProxyProvider.GenerateType">
            <summary>
            Return the typeof of the IHardwareproxy privided by this provider
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.AbstractProxyProvider`1.Select(System.Windows.Forms.IWin32Window)">
            <summary>
            Function called for Selection of ressource, etc
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Hardware.AbstractProxyProvider`1.Name">
            <summary>
            Name of the Provider
            </summary>
        </member>
        <member name="P:Sardauscan.Hardware.AbstractProxyProvider`1.GenerateType">
            <summary>
            Generated IHardwareProxy Type
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.DragDropTaskList">
            <summary>
            Drag and Drop control to construct/load/Save Process
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.DragDropTaskList.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.DragDropTaskList.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.DragDropTaskList.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.DragDropTaskList.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewSelector">
            <summary>
            Class to select the current IMainView of the main interface
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.ApplicationView.ViewSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewSelector.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationSteps.Manual">
            <summary>
            Scanner physical xonfiguration helper
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationSteps.Manual.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Manual.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Manual.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Manual.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Manual.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo">
            <summary>
            Interface for a Calibration Step 
            </summary>
        </member>
        <member name="P:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo.OrderId">
            <summary>
            Order id for visual order of the Clibration step button
            </summary>
        </member>
        <member name="P:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo.Label">
            <summary>
            Label of the Calibration Step button
            </summary>
        </member>
        <member name="P:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo.ControlType">
            <summary>
            Type of the Main Calibration step Control
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationSteps.Dimention">
            <summary>
            Scanner Dimention configuration control
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationSteps.Dimention.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Dimention.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Dimention.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Dimention.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.Dimention.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LinesRemoveEmpty">
            <summary>
            Remove Empty ScanLines
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.AbstractLineTask">
            <summary>
            Abstract class for ScanLineTask
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.AbstractProcessingTask">
            <summary>
            Abstract Processing Task
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Percent">
            <summary>
            Completion percent of the task
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Clone">
            <summary>
            Clone this task
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.RunSettings">
            <summary>
            Run the settings interface (return true if modified)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.PrepareToRun">
            <summary>
            Prepate task to run
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Run(Sardauscan.Core.ScanData,System.Windows.Forms.Control,System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs,System.ComponentModel.ProgressChangedEventHandler)">
            <summary>
            Run the task
            </summary>
            <param name="source">Source data</param>
            <param name="control">Control that launch</param>
            <param name="worker">background worker trhead if anny</param>
            <param name="e">DoWork Event argument</param>
            <param name="updateFunc"> Update function to call</param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.UpdatePercent(System.Int32,Sardauscan.Core.ScanData)">
            <summary>
            Update percentage
            </summary>
            <param name="percent"></param>
            <param name="data"></param>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.DoTask(Sardauscan.Core.ScanData)">
            <summary>
            Realy do the task
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.CanInsert(Sardauscan.Core.ProcessingTask.AbstractProcessingTask,Sardauscan.Core.ProcessingTask.AbstractProcessingTask)">
            <summary>
            Check if the task can be inserted between two other
            </summary>
            <param name="prev"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.CanInsert(Sardauscan.Core.ProcessingTask.eTaskItem,Sardauscan.Core.ProcessingTask.eTaskItem)">
            <summary>
            Check if the task can be inserted based on input output data Type
            </summary>
            <param name="prevOut"></param>
            <param name="nextIn"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.CanFollow(Sardauscan.Core.ProcessingTask.eTaskItem)">
            <summary>
            Check if task can follow based on Data Type
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.CanFolow(Sardauscan.Core.ProcessingTask.AbstractProcessingTask)">
            <summary>
            Check if task can follow another task
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.CompareTo(System.Object)">
            <summary>
            Compare a Task to another
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.LoadFromFile(System.String)">
            <summary>
            Load a task from Config
            </summary>
            <param name="settingsDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.LoadFromXml(System.String)">
            <summary>
            Load a task from XML
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.SaveToFile(System.String)">
            <summary>
            Save task to a file
            </summary>
            <param name="settingsDirectory"></param>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.ToXml">
            <summary>
            Get the XML to save for this task
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.In">
            <summary>
            Input Data Type
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Out">
            <summary>
            Output Data type
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Status">
            <summary>
            Status of the task
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.HasBrowsableSettings">
            <summary>
            Check if this task has Browsable Settings
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.HasSettings">
            <summary>
            Does this task have Settings
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Name">
            <summary>
            Name of the task
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.DisplayName">
            <summary>
            Display name of the task
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.Ready">
            <summary>
            Is the task ready
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.LastError">
            <summary>
            Last Error of the task
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractProcessingTask.ToolTip">
            <summary>
            Task tooltip
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractLineTask.DoTask(Sardauscan.Core.ScanData)">
            <summary>
            Do the task
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractLineTask.DoTask(Sardauscan.Core.ScanLine)">
            <summary>
            Abstract function for work to do on a Scanline
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractLineTask.Clone">
            <summary>
            Clone this task
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractLineTask.In">
            <summary>
            In is Scanlines
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractLineTask.Out">
            <summary>
            Out Is ScanLines
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractLineTask.LaunchParallel">
            <summary>
            Laucn the task in Parallel (threads / lines)
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LinesRemoveEmpty.DoTask(Sardauscan.Core.ScanLine)">
            <summary>
            Do the work
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.LinesRemoveEmpty.Name">
            <summary>
            Name of the task
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Triangle3D">
            <summary>
            Triangle in 3D
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.#ctor(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D)">
            <summary>
            Ctor
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.#ctor(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,OpenTK.Vector3)">
            <summary>
            Ctor
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="normal"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.#ctor(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,System.Drawing.Color)">
            <summary>
            Ctor
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="color"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.#ctor(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,OpenTK.Vector3,System.Drawing.Color)">
            <summary>
            Ctor
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="color"></param>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Triangle3D.Point1">
            <summary>
            Point 1 of the triangle
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Triangle3D.Point2">
            <summary>
            Point 2 of the triangle
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Triangle3D.Point3">
            <summary>
            Point 3 of the triangle
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Triangle3D.Normal">
            <summary>
            Normal of the triangle
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Triangle3D.Color">
            <summary>
            Color of the triangle
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.Valid">
            <summary>
            Is is a valid Triangle
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.ToGL(System.Boolean,System.Boolean)">
            <summary>
            Draw the Triangle to OpenGL
            </summary>
            <param name="useNormal"></param>
            <param name="useColor"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.CalculateNormal(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D)">
            <summary>
            Calculate a normal for 3 points
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.CalculateNormal(OpenTK.Vector3,OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Calculate a normal for 3 points position
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.CalculateColor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Calculate a color based on 3 color (average)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Triangle3D.CalculateColor(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D)">
            <summary>
            Calculate a color based on 3 Points (average)
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Point3DList">
            <summary>
            Base class for a list of Point3D
            </summary>
        </member>
        <member name="T:Sardauscan.Core.DirtyAvareList`1">
            <summary>
            IList with a dlag when something change
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sardauscan.Core.DirtyAvareList`1.#ctor(System.Int32)">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.I3DEntity">
            <summary>
             Interface for Trianges recuperation
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.IScene3DPart">
            <summary>
            Interface for any Scene Part
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DPart.Clear">
            <summary>
            Clear the current Scene part
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DPart.Update">
            <summary>
            Update (min-max- etc)
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DPart.Render(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render the part for with given Rendering context
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Sardauscan.Core.Interface.IScene3DPart.Min">
            <summary>
            Minimal X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.IScene3DPart.Max">
            <summary>
            MAximal X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.IScene3DPart.Dirty">
            <summary>
            Is the Scene dirty (modified), tell us if we must call Update (to update min-max etc)
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.I3DEntity.GetTriangles">
            <summary>
            Get the mesh Triangles
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.I3DEntity.IsMesh">
            <summary>
            IS this 3d entity a Mesh
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.#ctor(System.Int32)">
            <summary>
            Ctor
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Add(System.Collections.Generic.List{Sardauscan.Core.Geometry.Point3D})">
            <summary>
            Add another List
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Update">
            <summary>
            Update the min-max
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Render(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render the Points to OpenGL
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.FromVertices(System.Collections.Generic.List{OpenTK.Vector3},System.Drawing.Color)">
            <summary>
            Create a Point3dList from Vector3 List and a color
            </summary>
            <param name="vertices"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.GetInterpolatedList(System.Int32)">
            <summary>
            Get a interpolated list of this list composed od "count" point
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.GetYInterpolated(Sardauscan.Core.Geometry.Point3DList)">
            <summary>
            Get a interpolated list of this list composed od "count" point based on the Y position of another list of points
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.ClosestY(System.Single)">
            <summary>
            Get the point with the Closest Y position 
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.GetNearestY(System.Single,System.Boolean)">
            <summary>
            Get the point with the Closest Y position 
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.GetInterpolateByY(System.Single,System.Boolean)">
            <summary>
            Get a interpolated list of this list composed od "count" point based on the Y position of points
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.InterpolateByY(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,System.Single)">
            <summary>
            Interpolate by y 2 Point3D
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Interpolate(Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,System.Single)">
            <summary>
            Interpolate 2 Point3D baser on a [0-1] range
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="clamp"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Interpolate(OpenTK.Vector3,OpenTK.Vector3,System.Single)">
            <summary>
            Interpolate 2 Vector3D on a [0-1] range
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="clamp"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.Interpolate(System.Single,System.Single,System.Single)">
            <summary>
            Interpolate 2 float on a [0-1] range
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="clamp"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3DList.GetTriangles">
            <summary>
            Get the list of Triangles in this
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Point3DList.DrawAs">
            <summary>
            OpenGL primitive to use
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Point3DList.Min">
            <summary>
            Minimal X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Point3DList.Max">
            <summary>
            Maximal X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Point3DList.IsMesh">
            <summary>
            Is these point list a mesh 
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Point3D">
            <summary>
            Point in 3D Space
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.#ctor(OpenTK.Vector3,OpenTK.Vector3,System.Drawing.Color)">
            <summary>
            Ctor
            </summary>
            <param name="pos"></param>
            <param name="normal"></param>
            <param name="color"></param>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Point3D.Position">
            <summary>
            Position of the Point in 3D
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Point3D.Normal">
            <summary>
            Normal to these point
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Point3D.Color">
            <summary>
            Color(texture) of this point
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.DistanceSquared(Sardauscan.Core.Geometry.Point3D)">
            <summary>
            Distance to another Point3D
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.ToGL(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render this point to OpenGL
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.CompareTo(System.Object)">
            <summary>
            Compare a point Y composant to another
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.Average(Sardauscan.Core.Geometry.Point3D)">
            <summary>
            Average this point with another
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.Average(System.Collections.Generic.List{Sardauscan.Core.Geometry.Point3D})">
            <summary>
            Average point3D List
            </summary>
            <param name="pts"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Point3D.RotateAroundY(System.Single)">
            <summary>
            Rotate this point around Y axe
            </summary>
            <param name="radian"></param>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.KMean">
            <summary>
            Apply a K-Mean process to remove the Scanline noises
            </summary>
        </member>
        <member name="T:Sardauscan.Core.IO.XYZIO">
            <summary>
            XYZ File
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.XYZIO.Write(System.String,Sardauscan.Core.ScanData)">
            <summary>
            Write ScanData to XYZ File
            </summary>
            <param name="file"></param>
            <param name="points"></param>
        </member>
        <member name="T:Sardauscan.Gui.Forms.ShowFullBitmapForm">
            <summary>
            Form to show a full size bitmap
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFullBitmapForm.#ctor(System.Windows.Forms.PictureBox)">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFullBitmapForm.GetImageFilter">
            <summary>
            Get the Filter string for all supported image types.
            This can be used directly to the FileDialog class Filter Property.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Sardauscan.Gui.Forms.ShowFullBitmapForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFullBitmapForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFullBitmapForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.LaserControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.LaserControl.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.LaserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.LaserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.LaserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.IOKCancelView">
            <summary>
            Interface for a control to be show in a OK-Cancel dialog
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.IOKCancelView.IsValid">
            <summary>
            Enable the OK button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Gui.IOKCancelView.OnOk">
            <summary>
            Called when OK is click
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.IOKCancelView.OnCancel">
            <summary>
            Called whan Cancel button is click
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.Gui.SardauscanSelectionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.SardauscanSelectionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.SardauscanSelectionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Vector3Ext">
            <summary>
            Vector3 Extention
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.Dot(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Dot Product
            </summary>
            <param name="v"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.IsValid(OpenTK.Vector3)">
            <summary>
            Is Vanid ( no NAN)
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.Dump(OpenTK.Vector3)">
            <summary>
            Dump as a string "X Y Z"
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.AngleInRadian(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Angle between 2 Vector in radian
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.AngleInDegrees(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Angle between 2 vector in degree
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.XZProjected_AngleInDegree(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            angle between 2 vector projected in XZ plane
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Vector3Ext.RotateAroundY(OpenTK.Vector3,System.Single)">
            <summary>
            Rotate a vector around Y Axe
            </summary>
            <param name="v"></param>
            <param name="radian"></param>
        </member>
        <member name="F:Sardauscan.Gui.ToolBoxView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.ToolBoxView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.ToolBoxView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.OpenGL.GLMaterial">
            <summary>
            Clas representing a OpenGl material
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLMaterial.Ambiant">
            <summary>
            Ambiant Color
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLMaterial.Diffuse">
            <summary>
            Diffuse Color
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLMaterial.Specular">
            <summary>
            Specular Color
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLMaterial.Shininess">
            <summary>
            Shininess
            </summary>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLMaterial.ToGL(System.Boolean,OpenTK.Graphics.OpenGL.MaterialFace)">
            <summary>
            specify this material to OpenGL
            </summary>
            <param name="lighting"></param>
            <param name="face"></param>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLMaterial.Default">
            <summary>
            Get the default MAterial
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLMaterial.CreateFrom(System.Xml.XmlNode)">
            <summary>
            Create from XmlNode
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Gui.Controls.MainToolBox">
            <summary>
            Main toolbox of the application
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.MainToolBox.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.MainToolBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.MainToolBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.MainToolBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationView.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationView.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationSteps.CorrectionMatrix">
            <summary>
            Laser Correction Matrix Construction Control
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationSteps.CorrectionMatrix.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.CorrectionMatrix.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.CorrectionMatrix.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSmallView.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationSmallView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSmallView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSmallView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ScanSlice">
            <summary>
            Object repesenting a Slice of a mesh
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ScanLine">
            <summary>
            Object representing all the data of a laser scan
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ScanLine.#ctor(System.Int32,System.Int32)">
            <summary>
            Ctor
            </summary>
            <param name="laserID"></param>
            <param name="capacity"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanLine.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Sardauscan.Core.Geometry.Point3D})">
            <summary>
            Ctor
            </summary>
            <param name="laserID"></param>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanLine.#ctor(System.Int32,Sardauscan.Core.Geometry.Point3DList)">
            <summary>
            Ctor
            </summary>
            <param name="laserID"></param>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanLine.#ctor(Sardauscan.Core.ScanLine)">
            <summary>
            Ctor
            </summary>
            <param name="laserID"></param>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanLine.RotateAroundY(System.Single)">
            <summary>
            Rotate these scanline around Y axe
            </summary>
            <param name="angle"></param>
        </member>
        <member name="P:Sardauscan.Core.ScanLine.DrawAs">
            <summary>
            Get the openGL drawing primitive
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanLine.DisplayAsLine">
            <summary>
            Get set the Render of this line
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanLine.IsFaces">
            <summary>
            Is this scanline a composed of face (mesh part)
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanLine.LaserID">
            <summary>
            LAser ID used to take this scanline
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanLine.Angle">
            <summary>
            Angle of the ScanLine
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ScanSlice.#ctor(System.Int32)">
            <summary>
            Ctor
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanSlice.#ctor(Sardauscan.Core.Geometry.Point3DList)">
            <summary>
            Ctor
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanSlice.Render(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render this Slice to OpenGL
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanSlice.RenderAsWireFrame(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render thes Slice WireFrame
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanSlice.RenderAsFace(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render this slice Faces
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Sardauscan.Core.ScanSlice.DrawAs">
            <summary>
            Primitive to use
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanSlice.IsFaces">
            <summary>
            this "ScanLine" is part of mesh: it is composed of Face
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.BezierBuilder">
            <summary>
            Class to help with bezier curve
            based on Herman Tulleken article
            http://devmag.org.za/2011/04/05/bzier-curves-a-tutorial/
            http://devmag.org.za/2011/06/23/bzier-path-algorithms/
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.#ctor(System.Int32,System.Single)">
                        Constructs a new empty Bezier curve. Use one of these methods
                        to add points: SetControlPoints, Interpolate, SamplePoints.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.SetControlPoints(Sardauscan.Core.Geometry.Point3DList)">
                        Sets the control points of this Bezier path.
                        Points 0-3 forms the first Bezier curve, points 
                        3-6 forms the second curve, etc.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.GetControlPoints">
                        Returns the control points for this Bezier curve.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.Interpolate(Sardauscan.Core.Geometry.Point3DList,System.Single)">
                        Calculates a Bezier interpolated path for the given points.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.SamplePoints(Sardauscan.Core.Geometry.Point3DList,System.Single,System.Single,System.Single)">
                        Sample the given points as a Bezier path.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.CalculateBezierPoint(System.Int32,System.Single)">
                        Caluclates a point on the path.
                    
                        @param curveIndex The index of the curve that the point is on. For example, 
                        the second curve (index 1) is the curve with controlpoints 3, 4, 5, and 6.
                    
                        @param t The paramater indicating where on the curve the point is. 0 corresponds 
                        to the "left" point, 1 corresponds to the "right" end point.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.GetDrawingPoints0">
                        Gets the drawing points. This implementation simply calculates a certain number
                        of points per curve.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.GetDrawingPoints1">
                        Gets the drawing points. This implementation simply calculates a certain number
                        of points per curve.
            
                        This is a lsightly different inplementation from the one above.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.GetDrawingPoints2">
                        This gets the drawing points of a bezier curve, using recursive division,
                        which results in less points for the same accuracy as the above implementation.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.FindDrawingPoints(System.Int32,System.Single,System.Single,Sardauscan.Core.Geometry.Point3DList,System.Int32)">
                        @returns the number of points added.
        </member>
        <member name="M:Sardauscan.Core.Geometry.BezierBuilder.CalculateBezierPoint(System.Single,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D,Sardauscan.Core.Geometry.Point3D)">
                        Caluclates a point on the Bezier curve represented with the four controlpoints given.
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.AngleColor">
            <summary>
            Color scanlines based on the ScanLine Angle
            </summary>
        </member>
        <member name="T:Sardauscan.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Ancor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Arobase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Asterix">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Barcode">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bars">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Battery_0">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Battery_1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Battery_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Battery_3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bitmap">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bitmap2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bulb">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Bulb2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Busy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Calib1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Calib2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Calib3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Calib4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Camera">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Check">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Check2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Checked2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Chip">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.circle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Clip">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Clipping">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.collapse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.collapse_hightlight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Color">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.CommandLine">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Connection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ConnectionLine6">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Construction">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Contrast">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Contrast2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Corner_Arrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.CountDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Crop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Cube">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Denied">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Direction">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Direction2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Disk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Entypo_e714_12__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Entypo_e74c_11__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Entypo_e777_9__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Exclamation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Exclamation_Panel2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.ExclamationPanel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Exit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.expand">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.expand_highlight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Eye">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Eye_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Eye_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.File">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.FileCheck">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Fire">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Fire2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Flag">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Flag2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Floppy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Floppy2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Folder_Close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Folder_Open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.FontAwesome_f065_9__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.FontAwesome_f066_8__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.FontAwesome_f16c_2__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Forward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gauge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gauge2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gear">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gear2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gear3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Gears">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Home">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Image">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Infinity">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Lab">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Light">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Light_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Light_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Lines">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Link2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Link3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Link4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Load">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Lock_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Lock_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Magic">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.MainIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Mark_Exclamation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Mark_Question">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Marker">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Maximize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Maximize_Sel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Mesh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Meshes">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Microscope">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Minimize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Minimize_Sel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Neurone">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Next">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.octicons_f033_3__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.octicons_f048_2__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.octicons_f06d_1__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.octicons_f0d1_0__64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.OPENGL">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;OpenGL&gt;
              &lt;Materials&gt;
                &lt;Material Name=&quot;Emerald&quot;&gt;
                  &lt;Ambient&gt;0.0215|0.1745|0.0215&lt;/Ambient&gt;
                  &lt;Diffuse&gt;0.07568|0.61424|0.07568&lt;/Diffuse&gt;
                  &lt;Specular&gt;0.633|0.727811|0.633&lt;/Specular&gt;
                  &lt;Shininess&gt;0.6&lt;/Shininess&gt;
                &lt;/Material&gt;
                &lt;Material Name=&quot;Jade&quot;&gt;
                  &lt;Ambient&gt;0.135|0.2225|0.1575&lt;/Ambient&gt;
                  &lt;Diffuse&gt;0.54|0.89|0.63&lt;/Diffuse&gt;
                  &lt;Specular&gt;0.316228|0.316228|0.316228&lt;/Specular&gt;
                  &lt;Shininess&gt;0.1&lt;/Shininess&gt;
                &lt;/Material&gt; [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Pause">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Picture">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.PieChart">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Pin">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Play">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Plug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.PowerOff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Previous">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Pulse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Puzzle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Puzzle2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Record">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Redo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Redo2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Refesh2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Refresh2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Reload">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Reload2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Reload3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Rescue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Rewind">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.RoundExclamation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.RoundExclamation_Done">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.RoundExclamation_Working">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Shield">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Skull">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Sliders">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Spot_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Spot_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Steps">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Sun">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Sun2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Swap">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Target">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Thunder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Tool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Tools">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Tools2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Trash">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Uncheck">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Uncheck2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Unchecked2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.undercontrol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Unlink">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.UpDown_Both">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.UpDown_Down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.UpDown_Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Usb">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Visor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Wifi">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Wifi2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Window_Close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Window_Maximize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Window_Minimize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Window_Restore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Zoom">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Zoom_Minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Sardauscan.Properties.Resources.Zoom_Plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.ICameraProxy">
            <summary>
            Basic interface For a Camera proxy
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.IHardwareProxy">
            <summary>
            Basic interface for a Hardware proxy
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IHardwareProxy.LoadFromHardwareId(System.String)">
            <summary>
             Load a IHardwareProxy with a specific HardwareId 
            </summary>
            <param name="hardwareId"></param>
            <returns> the loaded IHardwareProxy or null if you can't reload it</returns>
        </member>
        <member name="M:Sardauscan.Core.Interface.IHardwareProxy.GetViewer">
            <summary>
            Get the associated Viewer Control for these IHardwareProxy
            the viewer allow the user to interact with or tweak the hardware.
            you can return null if there is no setting or viewer 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.IHardwareProxy.HardwareId">
            <summary>
            A unique id to identify a specific instance of IHardwareProxy (mainly used for reload a IHardwareproxy, so store all the properties)
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.ICameraProxy.AcquireImage">
            <summary>
            Return the current image of the camera
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.ICameraProxy.ImageHeight">
            <summary>
            Get the camera image Height resolution (height of the current image)
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.ICameraProxy.ImageWidth">
            <summary>
            Get the camera image Width resolution (Width of the current image)
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.ICameraProxy.SensorWidth">
            <summary>
            Get the sensor width
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.ICameraProxy.SensorHeight">
            <summary>
            Get the sensor height
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Interface.ICameraProxy.FocalLength">
            <summary>
            Get the focal lenght
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.TuneSmallView">
            <summary>
            Tune Laser Detection command control
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.TuneSmallView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.TuneSmallView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.TuneSmallView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.TuneSmallView.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.TuneSmallView.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.Gui.DSCam.DSCamPropertySlider">
            <summary>
            Class used to ling a Directshow Camera control to a slider
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.Gui.DSCam.DSCamPropertySlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCam.DSCamPropertySlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCam.DSCamPropertySlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.CustomButtonState">
            <summary>
            Custom button state enum
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ImageButton">
            <summary>
            Image button
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ImageButton.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.OpenGL.DragBallNavigator">
            <summary>
            Drag ball for the OpenGL Viewer
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfoExt">
            <summary>
            Extention class For ICalibrationStepInfo
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfoExt.Image(Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo)">
            <summary>
            Get the predefined Image for the button
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfoExt.CreateControl(Sardauscan.Gui.CalibrationSteps.ICalibrationStepInfo)">
            <summary>
            Create the Calibration Step info Control
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Ray">
            <summary>
            Class defining a Ray
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Ray.#ctor(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Ctor
            </summary>
            <param name="origin"></param>
            <param name="direction"></param>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Ray.Origin">
            <summary>
            Origin of the Ray
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LaserMerger">
            <summary>
            Merge laser together by average
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LaserMerger.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Interface.ITurnTableProxy">
            <summary>
            Basic interface for a Turn Table Proxy
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.ITurnTableProxy.Rotate(System.Double,System.Boolean)">
            <summary>
            Rotate the Table
            </summary>
            <param name="theta"></param>
            <param name="relative">use relative(true) or absolute(false) rotation</param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Interface.ITurnTableProxy.InitialiseRotation">
            <summary>
            Set the current position to 0° (for absolute rotation)
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.ITurnTableProxy.MinimumRotation">
            <summary>
            Get the minimum Rotation angle for the table
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.ITurnTableProxy.MotorEnabled">
            <summary>
            Enable of disable the motors
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.ILaserProxy">
            <summary>
            Basic Interface for a Laser Proxy
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.ILaserProxy.Turn(System.Int32,System.Boolean)">
            <summary>
            Turn a laser on or off
            </summary>
            <param name="index"></param>
            <param name="on"></param>
        </member>
        <member name="M:Sardauscan.Core.Interface.ILaserProxy.On(System.Int32)">
            <summary>
            Ask if a laser is on or off
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Interface.ILaserProxy.Count">
            <summary>
            Get the count of laser
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.SardauscanHardwareProxy.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Forms.CustomAppForm">
            <summary>
            Extended form class that suports drawing in non-client area.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientAreaCalcSize(System.Drawing.Rectangle@,System.Boolean)">
            <summary>Adjust the supplied Rectangle to the desired position of the client rectangle.</summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientAreaHitTest(System.Drawing.Point)">
            <summary>
            Returns a value from a NCHITTEST enumeration specifing the window element on given point.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Delivers new mouse position when it is moved over the non client area of the window. 
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientMouseLeave(System.EventArgs)">
            <summary>
            Called when mouse cursor leaves the non client window area.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientMouseDown(Sardauscan.Gui.Forms.CustomForm.NonClientMouseEventArgs)">
            <summary>
            Called each time one of the mouse buttons was pressed over the non-client area.
            </summary>
            <param name="args">NonClientMouseEventArgs contain mouse position, button pressed,
            and hit-test code for current position. </param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.OnNonClientAreaPaint(Sardauscan.Gui.Forms.CustomForm.NonClientPaintEventArgs)">
            <summary>
            Paints the client rect - e.ClipingRect has the correct window size, since this.Width, this.Height
            aren't always correct when calling this methode (because window is actually resizing)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.InvalidateWindow">
            <summary>
            This method should invalidate entire window including the non-client area.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomAppForm.DepressButton(Sardauscan.Gui.Forms.CustomForm.CustomCaptionButton)">
            <summary>
            This method handles depressing the titlebar button. It captures the mouse and creates a message loop
            filtring only the mouse buttons until a WM_MOUSEMOVE or WM_LBUTTONUP message is received.
            </summary>
            <param name="currentButton">The button that was pressed</param>
            <returns>true if WM_LBUTTONUP occured over this button; false when mouse was moved away from this button.</returns>
        </member>
        <member name="F:Sardauscan.Gui.Forms.TaskPropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.TaskPropertiesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.TaskPropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.OpenGL.GLConfig">
            <summary>
            OpenGL Confguration
            </summary>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLConfig.Material(System.String)">
            <summary>
            Get a OpenGL materail from it's name
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLConfig.MaterialNames">
            <summary>
            Get the list of All OpenGl materials names
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.OpenGL.GLConfig.Materials">
            <summary>
            Dictionnary of predefined Materials
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineBezierSmooth">
            <summary>
            Smooth the Scanline with a Bezier courbe interpolation
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LineBezierSmooth.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Interface.IScene3DPartExt">
            <summary>
            IScene3D interface Extentions
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DPartExt.Center(Sardauscan.Core.Interface.IScene3DPart)">
            <summary>
            Get the center of the part
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Interface.IScene3DPartExt.Size(Sardauscan.Core.Interface.IScene3DPart)">
            <summary>
             Get the size of the part
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraSelectionControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.Gui.DSCameraSelectionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraSelectionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraSelectionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.TuneBigView.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.TuneBigView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.TuneBigView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.TuneBigView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Sardauscan.Gui.SkinInfo.ActiveTitleBackColor">
            
        </member>
        <member name="T:Sardauscan.Gui.Controls.HardwareStatusControl">
            <summary>
            Control to Select/Remove/showStatus the hardware proxy
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.HardwareStatusControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.HardwareStatusControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.HardwareStatusControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.HardwareStatusControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.HardwareStatusControl.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.StripResult">
            <summary>
            Strip result
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.StripResult.#ctor(Sardauscan.Core.ScanLine,Sardauscan.Core.ScanLine)">
            <summary>
            Create a strip result for 2 Scanline (with same Nbr of Points)
            </summary>
            <param name="prev"></param>
            <param name="current"></param>
        </member>
        <member name="F:Sardauscan.Core.ProcessingTask.StripResult.Previous">
            <summary>
            Previous ScanLine
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ProcessingTask.StripResult.Current">
            <summary>
            Current ScanLine
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ProcessingTask.StripResult.Result">
            <summary>
            Scan*SLICE* resulting
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder">
            <summary>
            Class for Abstract Mesh builder
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.DoTask(Sardauscan.Core.ScanData)">
            <summary>
            Do the task function override
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.CreateStrip(Sardauscan.Core.ScanLine,Sardauscan.Core.ScanLine)">
            <summary>
            Create a StripResult from 2 ScanLine
            </summary>
            <param name="previous"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.CreateForTopBottom(Sardauscan.Core.Geometry.Point3DList,System.Boolean)">
            <summary>
            Create Top and Bottom of mesh
            </summary>
            <param name="pts"></param>
            <param name="invert"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.AdjustNormalFromTriangleStrip(Sardauscan.Core.Geometry.Point3DList)">
            <summary>
            Adjust normals for a "trianglestrip" Point list
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.Clone">
            <summary>
            Clone the task
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.In">
            <summary>
            In data are ScanLines
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.AbstractMeshBuilder.Out">
            <summary>
            OutData is a Mesh
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Settings">
            <summary>
            Application Settings
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.CAMERA">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.X">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.Y">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.Z">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.TABLE">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.HEIGHT">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.DIAMETER">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.MAGNITUDE_THRESHOLD">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.MAX_WIDTH">
            <summary></summary>
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.MIN_WIDTH">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.COM">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.LASER_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.TABLE_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.CONNECTION_TIMEOUT">
            <summary></summary>
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.INFO_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.SCANNER">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.PRECISION">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.DEFAULTCOLOR">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.USEBITMAP">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.CENTERDETECTIONMODE">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.LAST_USED">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.COM_PORT">
            <summary></summary>
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.CAMERA_DEVICE">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.CAMERA_RESOLUTION">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.SYSTEM">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.MAXTHREADS">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.OPENGL">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.LIGHTNING">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.SHOWSCENECOLOR">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.SHOWBOUNDINGBOX">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.DEFAULTMATERIAL">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.SMOOTH">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.PROJECTION">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.WIREFRAME">
            <summary></summary>
        </member>
        <member name="M:Sardauscan.Core.Settings.LASER(System.Int32)">
            <summary></summary>
        </member>
        <member name="F:Sardauscan.Core.Settings.LASER_COMMON">
            <summary></summary>
        </member>
        <member name="M:Sardauscan.Core.Settings.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Settings.Read(System.String,System.String,System.Int32)">
            Read an integer from the settings database 
        </member>
        <member name="M:Sardauscan.Core.Settings.Write(System.String,System.String,System.Int32)">
            Updates the given integer value in the settings database 
        </member>
        <member name="M:Sardauscan.Core.Settings.Read(System.String,System.String,System.Single)">
            Read a floating point value from the settings database 
        </member>
        <member name="M:Sardauscan.Core.Settings.Write(System.String,System.String,System.Single)">
            Updates the given real value in the settings database 
        </member>
        <member name="F:Sardauscan.Core.Settings.m_Instances">
            <summary>
            Static function to get/set the Global object Reference
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.Gui.DSCameraProxyControl">
            <summary>
            Proxy class for a directshow Camera
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.Gui.DSCameraProxyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraProxyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraProxyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraProxyControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.DSCameraProxyControl.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.UnderConstruction">
            <summary>
            Under developpement control
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.UnderConstruction.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.UnderConstruction.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.UnderConstruction.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.UnderConstruction.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewType">
            <summary>
            Views id enum
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.ApplicationView.ViewType.Process">
            <summary>
            Process view
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.ApplicationView.ViewType.Tune">
            <summary>
            Tune view
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.ApplicationView.ViewType.Calibrate">
            <summary>
            Calibration view
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.PixelLocation">
            <summary>
            Calss for a pixel location in a image
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.PixelLocation.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.PixelLocation.#ctor(System.Single,System.Single)">
            <summary>
             CTor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Sardauscan.Core.Geometry.PixelLocation.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Geometry.PixelLocation.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.PixelLocation.IsNull">
            <summary>
            Is default
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Geometry.PixelLocation.ToPointF">
            <summary>
            Convert to PointF
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.OpenGL.RenderingContext">
            <summary>
            OpenGL rendering Context
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.UseObjectColor">
            <summary>
            Use Object color
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.UseNormal">
            <summary>
            Use object Normals
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.Wireframe">
            <summary>
            Display WireFrame of object
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.DefaultFaceMaterial">
            <summary>
            Default material for Faces
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.DefaultLineMaterial">
            <summary>
            Default material for lines
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.RenderingContext.Lightning">
            <summary>
            Lightning is on
            </summary>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.RenderingContext.Default">
            <summary>
            Get Default
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.RenderingContext.From(Sardauscan.Core.OpenGL.GLViewerConfig)">
            <summary>
            Create RenderingContext From ViewerConfig
            </summary>
            <param name="viewerConfig"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Config">
            <summary>
            Represents a Configuration Node in the XML file
            http://www.codeproject.com/Articles/16953/XML-configuration-files-made-simple-at-last
            </summary>
        </member>
        <member name="F:Sardauscan.Core.Config.node">
            <summary>
            The node from the XMLDocument, which it describes
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Config.#ctor">
            <summary>
            This class cannot be constructed directly. You will need to give a node to describe
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Config.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates an instance of the class
            </summary>
            <param name="node">
            the XmlNode to describe
            </param>
        </member>
        <member name="M:Sardauscan.Core.Config.Validate">
            <summary>
            Check if the node conforms with the config xml restrictions
            1. No nodes with two children of the same name
            2. Only alphanumerical names
            </summary>
            <returns>
            True on success and false on failiure
            </returns>        
        </member>
        <member name="M:Sardauscan.Core.Config.Remove">
            <summary>
            Remove the specific node from the tree
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Config.RemoveChildren">
            <summary>
            Remove all children of the node, but keep the node itself
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Config.Name">
            <summary>
            The Name of the element it describes
            </summary>
            <remarks>Read only property</remarks>        
        </member>
        <member name="P:Sardauscan.Core.Config.ChildCount">
            <summary>
            Number of children nodes
            </summary>
            <remarks>Read only property</remarks>
        </member>
        <member name="P:Sardauscan.Core.Config.ChildrenNames">
            <summary>
            A string array with the names of the child nodes
            </summary>
            <remarks>Read only property</remarks>
        </member>
        <member name="P:Sardauscan.Core.Config.Children">
            <summary>
            A ConfigSetting array describin each child node
            </summary>
            <remarks>Read only property</remarks>
        </member>
        <member name="P:Sardauscan.Core.Config.Value">
            <summary>
            String value of the specific Configuration Node
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Config.IntValue">
            <summary>
            int value of the specific Configuration Node
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Config.BoolValue">
            <summary>
            bool value of the specific Configuration Node
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Config.FloatValue">
            <summary>
            float value of the specific Configuration Node
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Config.Item(System.String)">
            <summary>
            Get a specific child node
            </summary>
            <param name="path">
            The path to the specific node. Can be either only a name, or a full path separated by '/' or '\'
            </param>
            <example>
            <code>
            XmlConfig conf = new XmlConfig("configuration.Xml");
            screenname = conf.Settings["screen"].Value;
            height = conf.Settings["screen/height"].IntValue;
             // OR
            height = conf.Settings["screen"]["height"].IntValue;
            </code>
            </example>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Hardware.SardauscanProxyProvider">
            <summary>
            Sardaukar Default firmware proxy provider
            </summary>
        </member>
        <member name="P:Sardauscan.Hardware.SardauscanProxyProvider.Name">
            <summary>
            Name of the harware/provider
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.PropertyGridEditor.NumericUpDownTypeConverter">
            <summary>
            Range modification for direct edit override
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute">
            <summary>
            Attribute to allow ranges to be added to the numeric updowner
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute.#ctor(System.UInt16)">
            <summary>
            Use to make a simple UInt16 max. Starts at 0, increment = 1
            </summary>
            <param name="max"></param>
        </member>
        <member name="M:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Use to make a simple integer (or default conversion) based range.
            default inclrement is 1
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="increment"></param>
        </member>
        <member name="M:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute.#ctor(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Set the Min, Max, increment, and decimal places to be used.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="increment"></param>
            <param name="decimalPlaces"></param>
        </member>
        <member name="M:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute.IsInRange(System.Object)">
            <summary>
            Validation function to check if the value is withtin the range (inclusive)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Gui.PropertyGridEditor.MinMaxAttribute.PutInRange(System.Object)">
            <summary>
            Takes the value and adjusts if it is out of bounds.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Gui.OpenGL.GLViewerConfigForm">
            <summary>
            OpenGl viewer configuration Control
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.GLViewerConfigForm.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.OpenGL.GLViewerConfigForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.GLViewerConfigForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.OpenGL.GLViewerConfigForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Forms.OkCancelDialog">
            <summary>
            Dialog the show a control in a OK-Cancel Dialog
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Forms.OkCancelDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.OkCancelDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.OkCancelDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.OkCancelDialog.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.OkCancelDialog.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Forms.ShowFull3dObjectForm">
            <summary>
            Form for the 3D viewer
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Forms.ShowFull3dObjectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFull3dObjectForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Forms.ShowFull3dObjectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.DisplayAs">
            <summary>
            Change the rendering of ScanLines
            </summary>
        </member>
        <member name="T:Sardauscan.Core.LockBitmap">
            <summary>
            http://www.codeproject.com/Tips/240428/Work-with-bitmap-faster-with-Csharp
            </summary>
        </member>
        <member name="M:Sardauscan.Core.LockBitmap.LockBits">
            <summary>
            Lock bitmap data
            </summary>
        </member>
        <member name="M:Sardauscan.Core.LockBitmap.UnlockBits">
            <summary>
            Unlock bitmap data
            </summary>
        </member>
        <member name="M:Sardauscan.Core.LockBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            Get the color of the specified pixel
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.LockBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Set the color of the specified pixel
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.TurnTableControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.TurnTableControl.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.TurnTableControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.TurnTableControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.TurnTableControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.UserControlExt">
            <summary>
            Extention class for UserControls
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.UserControlExt.IsDesignMode(System.Windows.Forms.Control)">
            <summary>
            Are we in Design mode, correct even for sub controls !
            </summary>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Gui.Forms.CustomForm.CustomCaptionButton">
            <summary>
            A button that can appear in the window caption bar
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.eTaskItem">
            <summary>
            Task input output data
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.eTaskStatus">
            <summary>
            Task Status type
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.MeshBuilderByInterpolatedList">
            <summary>
            Reconstruc the Mesh by interpolating the Scanline points 
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.MeshBuilderByInterpolatedList.Name">
            <summary>
            Name of the task
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Utils">
            <summary>
            Utility class
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Utils.RADIANS_TO_DEGREES(System.Single)">
            <summary>
            Darian to degree
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.DEGREES_TO_RADIANS(System.Single)">
            <summary>
            Degree to Radian
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.ROUND(System.Double)">
            <summary>
            Fast Round
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.DeltaAngle(System.Single,System.Single)">
            <summary>
            Angle between 2 angle
            </summary>
            <param name="angle1"></param>
            <param name="angle2"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.GetMedian(System.Collections.Generic.List{Sardauscan.Core.Geometry.Point3D})">
            <summary>
            Get median Point3D of a List of Point3D
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.GetMedian(System.Collections.Generic.List{OpenTK.Vector3})">
            <summary>
            Get mediant Vector3
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.GetMedian(System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Get median Color
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Utils.GetMedian``1(System.Collections.Generic.List{``0})">
            <summary>
            Templated Get Median
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceNumbers"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Hardware.Com.Provider">
            <summary>
            Provider of System Serial Port
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Com.Provider.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ColorExtension">
            <summary>
            Color Extention
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ToGLRgba32(System.Drawing.Color)">
            <summary>
            Convert to a in RGBA
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ToVector(System.Drawing.Color)">
            <summary>
            Convert to a Vector4
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ColorFromVector(OpenTK.Vector4)">
            <summary>
            Create From a vector4
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.Lighter(System.Drawing.Color)">
            <summary>
            Get the lighter Color of a specified color
            </summary>
            <param name="color"></param>
            <returns>a brighter color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.HeavyLighter(System.Drawing.Color)">
            <summary>
            Get the lighter Color of a specified coloe
            </summary>
            <param name="color"></param>
            <returns>a brighter color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.MediumLighter(System.Drawing.Color)">
            <summary>
            Get the lighter Color of a specified coloe
            </summary>
            <param name="color"></param>
            <returns>a brighter color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.Darker(System.Drawing.Color)">
            <summary>
            Get the Darker Color of a specified color
            </summary>
            <param name="color"></param>
            <returns>a Darker Color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.HeavyDarker(System.Drawing.Color)">
            <summary>
            Get the Darker Color of a specified color
            </summary>
            <param name="color"></param>
            <returns>a Darker Color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.MediumDarker(System.Drawing.Color)">
            <summary>
            Get the Darker Color of a specified color
            </summary>
            <param name="color"></param>
            <returns>a Darker Color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.SetBrightness(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute brightness of a colour 
            </summary> 
            <param name="c">Original colour</param> 
            <param name="brightness">The luminance level to impose</param> 
            <returns>an adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ModifyBrightness(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing brightness level 
            </summary> 
            <param name="c">The original colour</param> 
            <param name="brightness">The luminance delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ModifyLuminosity(System.Drawing.Color,System.Double)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="factor"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.SetSaturation(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute saturation level 
            </summary> 
            <remarks>Accepted values 0-1</remarks> 
            <param name="c">An original colour</param> 
            <param name="Saturation">The saturation value to impose</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ModifySaturation(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing Saturation level 
            </summary> 
            <remarks> 
            To reduce Saturation use a number smaller than 1. To increase Saturation use a number larger tnan 1 
            </remarks> 
            <param name="c">The original colour</param> 
            <param name="Saturation">The saturation delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.SetHue(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute Hue level 
            </summary> 
            <remarks>Accepted values 0-1</remarks> 
            <param name="c">An original colour</param> 
            <param name="Hue">The Hue value to impose</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.ModifyHue(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing Hue level 
            </summary> 
            <remarks> 
            To reduce Hue use a number smaller than 1. To increase Hue use a number larger tnan 1 
            </remarks> 
            <param name="c">The original colour</param> 
            <param name="Hue">The Hue delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.Invert(System.Drawing.Color)">
            <summary>
            invert the color
            </summary>
            <param name="c">the color</param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.GetStepColor(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Get a color between 2 color (ie gradiant step)
            </summary>
            <param name="s">Start Color </param>
            <param name="e">End Color</param>
            <param name="clamp">Interpolation factor : clamp [0,1]</param>
            <returns>interpolated color</returns>
        </member>
        <member name="M:Sardauscan.Core.ColorExtension.GetStepColor(System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean)">
            <summary>
            Get a color between 2 color (ie gradiant step)
            </summary>
            <param name="s">Start Color </param>
            <param name="e">End Color</param>
            <param name="clamp">Intyerpolation factor : clamp [0,1]</param>
            <param name="useHSB">Use USB convertion to compute interpolation</param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.ColorHSB">
            <summary>
            class to represent color as HSB
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ColorHSB.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSB.m_Hue">
            <summary>
            Hue
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSB.m_Saturation">
            <summary>
            Saturation
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSB.m_Brightness">
            <summary>
            Brightness
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ColorHSB.ToColor">
            <summary> 
            Converts a colour from ColorHSB to RGB 
            </summary> 
            <remarks>Adapted from the algoritm in Foley and Van-Dam</remarks> 
            <param name="hsb">The ColorHSB value</param> 
            <returns>A Color structure containing the equivalent RGB values</returns> 
        </member>
        <member name="M:Sardauscan.Core.ColorHSB.FromRGB(System.Drawing.Color)">
            <summary> 
            Converts RGB to ColorHSB 
            </summary> 
            <remarks>Takes advantage of whats already built in to .NET by using the Color.GetHue, Color.GetSaturation and Color.GetBrightness methods</remarks> 
            <param name="c">A Color to convert</param> 
            <returns>An ColorHSB value</returns> 
        </member>
        <member name="P:Sardauscan.Core.ColorHSB.Hue">
            <summary>
            Hue property
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ColorHSB.Saturation">
            <summary>
            Saturation property
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ColorHSB.Brightness">
            <summary>
            Brightness property
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ColorHSV">
            <summary>
            class to represent color as HSV
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ColorHSV.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSV.m_Hue">
            <summary>
            Hue
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSV.m_Saturation">
            <summary>
            Saturation
            </summary>
        </member>
        <member name="F:Sardauscan.Core.ColorHSV.m_Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ColorHSV.Hue">
            <summary>
            Hue property
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ColorHSV.Saturation">
            <summary>
            Saturation property
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ColorHSV.Value">
            <summary>
            Value property
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.Gui.SardauscanProxyControl">
            <summary>
            Proxy For default sardauscan Firmware
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.Gui.SardauscanProxyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.SardauscanProxyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Hardware.Gui.SardauscanProxyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.DSCameraProxyProvider">
            <summary>
            Direct show Camera PRovider
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxyProvider.Select(System.Windows.Forms.IWin32Window)">
            <summary>
            Selection of the Camera
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Hardware.DSCameraProxyProvider.Name">
            <summary>
            Name of the provider
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.CalibrationBigView">
            <summary>
            Control for Calibration
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.CalibrationBigView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationBigView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationBigView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.CalibrationBigView.#ctor">
            <summary>
            default ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.Process">
            <summary>
            Process (list of task)
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.MeshBuilderByNearestY">
            <summary>
            Reconstruc the Mesh by finding nearest Y points
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.CrashReport">
            <summary>
            Control to display a Crash Report
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.CrashReport.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.CrashReport.SetException(System.Exception)">
            <summary>
            Set the Exception
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Sardauscan.Gui.Controls.CrashReport.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.CrashReport.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.CrashReport.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.View">
            <summary>
            Structure to store information of a main window View
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.View.#ctor(Sardauscan.Gui.Controls.ApplicationView.ViewType,System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineSort">
            <summary>
            Sort the Scanlines by angle
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.StatusImageButton">
            <summary>
            Class for a Status Image button : On Off different of Enable/Disale
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.StatusImageButton.#ctor">
            <summary>
            Default Ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.MeshBuilderByIndex">
            <summary>
            Reconstruc the Mesh using the Scanline points index
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.MeshBuilderByIndex.Name">
            <summary>
            Name of the Task
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Interface.ILaserProxyExtention">
            <summary>
            Extention of ILaserProxy
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.ILaserProxyExtention.TurnAll(Sardauscan.Core.Interface.ILaserProxy,System.Boolean)">
            <summary>
            Turn all the lasers  on or off together
            </summary>
            <param name="ctrl"></param>
            <param name="on"></param>
        </member>
        <member name="T:Sardauscan.Core.BitmapExtention">
            <summary>
            BitMap Extention
            </summary>
        </member>
        <member name="M:Sardauscan.Core.BitmapExtention.SavePixels(System.Collections.Generic.List{Sardauscan.Core.Geometry.PixelLocation},System.Int32,System.Int32,System.String)">
            <summary>
            Write Pixel location as a PNG
            </summary>
            <param name="pixels"></param>
            <param name="imageWidth"></param>
            <param name="imageHeight"></param>
            <param name="pngFilename"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.BitmapExtention.OverlayPixels(System.Drawing.Bitmap,System.Collections.Generic.List{Sardauscan.Core.Geometry.PixelLocation})">
            <summary>
            Overlay Pixel Location to a bitmap
            </summary>
            <param name="image"></param>
            <param name="pixels"></param>
        </member>
        <member name="M:Sardauscan.Core.BitmapExtention.GetPixels(System.Drawing.Bitmap)">
            <summary>
            Get All the pixels of a Bitmap
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.BitmapExtention.SetRedComponent(System.Drawing.Bitmap,System.Collections.Generic.List{System.Byte[]})">
            <summary>
            Set the red componenent For a bitmap
            </summary>
            <param name="image"></param>
            <param name="reds"></param>
        </member>
        <member name="M:Sardauscan.Core.BitmapExtention.SetRowColors(System.Drawing.Bitmap,System.Int32,System.Drawing.Color[])">
            <summary>
            Set the row color of a Bitmap
            </summary>
            <param name="image"></param>
            <param name="y"></param>
            <param name="colors"></param>
        </member>
        <member name="T:Sardauscan.Gui.Controls.SettingsControl">
            <summary>
            Control to view/edit ApplicationSettings
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.SettingsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.SettingsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.SettingsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.SettingsControl.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST">
            <summary>
            Location of cursor hot spot returnet in WM_NCHITTEST.
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows 
            (same as HTNOWHERE, except that the DefWindowProc function produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTTRANSPARENT">
            <summary>
            In a window currently covered by another window in the same thread 
            (the message will be sent to underlying windows in the same thread until one of them returns a code that is not HTTRANSPARENT).
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTNOWHERE">
            <summary>
            On the screen background or on a dividing line between windows.
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTCLIENT">
            <summary>In a client area.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTCAPTION">
            <summary>In a title bar.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTGROWBOX">
            <summary>In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTMENU">
            <summary>In a menu.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTHSCROLL">
            <summary>In a horizontal scroll bar.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTVSCROLL">
            <summary>In the vertical scroll bar.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTMINBUTTON">
            <summary>In a Minimize button.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTMAXBUTTON">
            <summary>In a Maximize button.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTLEFT">
            <summary>In the left border of a resizable window 
            (the user can click the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTRIGHT">
            <summary>
            In the right border of a resizable window 
            (the user can click the mouse to resize the window horizontally).
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTTOP">
            <summary>In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTTOPLEFT">
            <summary>In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTBOTTOM">
            <summary>	In the lower-horizontal border of a resizable window 
            (the user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTBOTTOMLEFT">
            <summary>In the lower-left corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTBOTTOMRIGHT">
            <summary>	In the lower-right corner of a border of a resizable window 
            (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTBORDER">
            <summary>In the border of a window that does not have a sizing border.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTCLOSE">
            <summary>In a Close button.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCHITTEST.HTHELP">
            <summary>In a Help button.</summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCCALCSIZE_PARAMS.rectProposed">
            <summary>
            Contains the new coordinates of a window that has been moved or resized, that is, it is the proposed new window coordinates.
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCCALCSIZE_PARAMS.rectBeforeMove">
            <summary>
            Contains the coordinates of the window before it was moved or resized.
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCCALCSIZE_PARAMS.rectClientBeforeMove">
            <summary>
            Contains the coordinates of the window's client area before the window was moved or resized.
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.Controls.NativeMethods.NCCALCSIZE_PARAMS.lpPos">
            <summary>
            Pointer to a WINDOWPOS structure that contains the size and position values specified in the operation that moved or resized the window.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Forms.CustomForm.CustomDrawUtil">
            <summary>
            Helper class for basic drawing functions.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Forms.CustomForm.CustomDrawUtil.CopyFromGraphics(System.Drawing.Graphics,System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Uses BitBlt to copy block from source to destination graphics.
            </summary>
        </member>
        <member name="T:Sardauscan.Core.LaserInfo">
            <summary>
            Laser information
            </summary>
        </member>
        <member name="M:Sardauscan.Core.LaserInfo.#ctor(System.Int32,OpenTK.Vector3,System.Drawing.SizeF)">
            <summary>
            Ctor
            </summary>
            <param name="id"></param>
            <param name="cameraPos"></param>
            <param name="tableSize"></param>
        </member>
        <member name="M:Sardauscan.Core.LaserInfo.MapPoints(System.Collections.Generic.List{Sardauscan.Core.Geometry.PixelLocation},System.Drawing.Bitmap)">
            <summary>
            Map points
            </summary>
            <param name="laserLocations"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="F:Sardauscan.Core.LaserInfo.DefaultColor">
            <summary>
            Laser default Texture color
            </summary>
        </member>
        <member name="P:Sardauscan.Core.LaserInfo.Id">
            <summary>
            Laser ID
            </summary>
        </member>
        <member name="P:Sardauscan.Core.LaserInfo.Location">
            <summary>
            Laser Location
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineMedianFilter">
            <summary>
            Apply a median Filter to the Scanline
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LineMedianFilter.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.IO.PLYIO">
            <summary>
            PLY IO
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.PLYIO.Write(System.String,Sardauscan.Core.ScanData)">
            <summary>
            Write ScanData To PLY file
            </summary>
            <param name="file"></param>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.MainForm">
            <summary>
            Main Form of the application
            </summary>
        </member>
        <member name="F:Sardauscan.Gui.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sardauscan.Gui.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.MainForm.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Scene3D">
            <summary>
            Scene 3D Object
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Scene3D.Update">
            <summary>
            Update the Scene info id modified
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Scene3D.Render(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render the Scene
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Scene3D.Min">
            <summary>
            Minimum X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Scene3D.Max">
            <summary>
            Maximum X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.Geometry.Scene3D.Dirty">
            <summary>
            Is the Scened Dirty (modified)
            </summary>
        </member>
        <member name="T:Sardauscan.Core.IO.Point3dArrayIOOpenFileEditor">
            <summary>
            Class for PropertyGrid open file
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.Point3dArrayIOOpenFileEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the open file dialog when it is created.
            </summary>
            
            <param name="openFileDialog">The <see cref="T:System.Windows.Forms.OpenFileDialog"></see> to use to select a file name. </param>
        </member>
        <member name="T:Sardauscan.Core.IO.Point3dArrayIOSaveFileEditor">
            <summary>
            Class for PropertyGrid Save file
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.Point3dArrayIOSaveFileEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the open file dialog when it is created.
            </summary>
            
            <param name="openFileDialog">The <see cref="T:System.Windows.Forms.OpenFileDialog"></see> to use to select a file name. </param>
        </member>
        <member name="T:Sardauscan.Core.IO.ScanDataIO">
            <summary>
            ScanData IO
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.ScanDataIO.Write(System.String,Sardauscan.Core.ScanData)">
            <summary>
            Write ScanData File
            </summary>
            <param name="file"></param>
            <param name="points"></param>
        </member>
        <member name="M:Sardauscan.Core.IO.ScanDataIO.Read(System.String)">
            <summary>
            Read ScanData File
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.ScanData">
            <summary>
            Ovject representing a Scan data or result
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ScanData.#ctor(System.Int32)">
            <summary>
            Ctor
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanData.PointCount">
            <summary>
            Get the number of points
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ScanData.Update">
            <summary>
            Update the ScanData bounding values
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ScanData.Render(Sardauscan.Core.OpenGL.RenderingContext@)">
            <summary>
            Render the ScanData to OpenGL
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Sardauscan.Core.ScanData.GetNearestLine(System.Single)">
            <summary>
            Get the nearest line to a given angle
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ScanData.IsMesh">
            <summary>
            Is it a mesh
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanData.Min">
            <summary>
            Minimum X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanData.Max">
            <summary>
            Maximum X Y Z position
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanData.Dirty">
            <summary>
            Is the data modified since last update
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.SavePoints">
            <summary>
            Save Scan Lines As Line/point
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.SavePoints.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.SaveMesh">
            <summary>
            Save Mesh As MeshFile
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.SaveStl">
            <summary>
            Save Mesh As STL
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.SavePly">
            <summary>
            Save Mesh As Ply
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.SaveXyz">
            <summary>
            Save Mesh As XYZ
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineScaleTask">
            <summary>
            Scale the Scanlines
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LineScaleTask.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.Interface.IRegistrableInstance">
            <summary>
            IRegistrableInstance
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Interface.IRegistrableInstance.OnRegister">
            <summary>
            Function called when instance is registred
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.IO.XmlConfig">
            <summary>
            The class which represents a configuration xml file
            based on http://www.codeproject.com/Articles/16953/XML-configuration-files-made-simple-at-last
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.ValidateXML(System.Boolean)">
            <summary>
            Check XML file if it conforms the config xml restrictions
            1. No nodes with two children of the same name
            2. Only alphanumerical names
            </summary>
            <param name="silent">
            Whether to return a true/false value, or throw an exception on failiure
            </param>
            <returns>
            True on success and in case of silent mode false on failiure
            </returns>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.#ctor(System.String,System.Boolean)">
            <summary>
            Create an XmlConfig from an existing file, or create a new one
            </summary>
            <param name="loadfromfile">
            Path and filename from where to load the xml file
            </param>
            <param name="create">
            If file does not exist, create it, or throw an exception?
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.Dispose">
            <summary>
            Save any modifications to the XML file before destruction
            if CommitOnUnload is true
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.LoadXmlFromFile(System.String,System.Boolean)">
            <summary>
            Load a new XmlDocument from a file
            </summary>
            <param name="filename">
            Path and filename from where to load the xml file
            </param>
            <param name="create">
            If file does not exist, create it, or throw an exception?
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.LoadXmlFromFile(System.String)">
            <summary>
            Load a new XmlDocument from a file
            </summary>
            <param name="filename">
            Path and filename from where to load the xml file
            </param>
            <remarks>
            Throws an exception if file does not exist
            </remarks>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.LoadXmlFromString(System.String)">
            <summary>
            Load a new XmlDocument from a string
            </summary>
            <param name="xml">
            XML string
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.NewXml(System.String)">
            <summary>
            Load an empty XmlDocument
            </summary>
            <param name="rootelement">
            Name of root element
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.Save(System.String)">
            <summary>
            Save configuration to an xml file
            </summary>
            <param name="filename">
            Path and filname where to save
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.Save(System.IO.Stream)">
            <summary>
            Save configuration to a stream
            </summary>
            <param name="stream">
            Stream where to save
            </param>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.Commit">
            <summary>
            If loaded from a file, commit any changes, by overwriting the file
            </summary>
            <returns>
            True on success
            False on failiure, probably due to the file was not loaded from a file
            </returns>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.Reload">
            <summary>
            If loaded from a file, trash any changes, and reload the file
            </summary>
            <returns>
            True on success
            False on failiure, probably due to file was not loaded from a file
            </returns>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.GetPropertyGridSettingsComponent">
            <summary>
            Load the Xml Configuration document and populate our CustomClass with a dynamic property
            for each of the supported configuration sections. We're only supporting three sections here.
            The default appSettings, plus our standard ApplicationConfiguration
            and CommonConfiguration section handlers. These handlers are derived from IConfigurationSectionHandler.
            They have extended support for the Description attribute in addition to the Key, Value 
            pair attributes in the Xml configuration file.
            This could easily be extended to include support for any section under the configuration
            section that has the <add key="value" value="value"/> structure (assuming you haven't written a
            completely new Xml structure for your custom configuration section).
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.XmlConfig.UpdateConfiguration(Sardauscan.Core.PropertyGridSettingsComponent,System.Boolean)">
            <summary>
            We're only supporting three sections here at the moment.
            The default appSettings, plus our standard ApplicationConfiguration
            and CommonConfiguration section handlers. These handlers have extended support for
            the Description attribute in addition to the Key, Value pair attributes 
            in the Xml configuration file.
            </summary>
        </member>
        <member name="P:Sardauscan.Core.IO.XmlConfig.CommitOnUnload">
            <summary>
            When unloading the current XML config file
            shold any changes be saved back to the file?
            </summary>
            <remarks>
            <list type="bullet">
            <item>Only applies if it was loaded from a local file</item>
            <item>True by default</item>
            </list>
            </remarks>
        </member>
        <member name="P:Sardauscan.Core.IO.XmlConfig.Settings">
            <summary>
            Gets the root ConfigSetting
            </summary>
        </member>
        <member name="T:Sardauscan.Core.PropertyGridSettingsComponent">
            <summary>
            Class for helping with PropertyGrid properties edition
            </summary>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.#ctor">
            <summary>
            Constructor of CustomClass which initializes the new PropertyDescriptorCollection.
            </summary>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.AddProperty(System.String,System.Object,System.String,System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Adds a property into the CustomClass.
            </summary>
            <param name="propName">Name of the property that needs to be added.</param>
            <param name="propValue">Value of the property that needs to be added.</param>
            <param name="propDesc">Description of the property that needs to be added.</param>
            <param name="propCat">The category to display this property in.</param>
            <param name="isReadOnly">Sets the property value to readonly in the property grid.</param>
            <param name="isExpandable">Tells the property grid that this property is expandable.</param>
            <param name="propType">DataType of the property that needs to be added.</param>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetClassName">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetAttributes">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetComponentName">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetConverter">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetDefaultEvent">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetDefaultProperty">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetEditor(System.Type)">
             <summary>
            
             </summary>
             <param name="editorBaseType"></param>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetEvents(System.Attribute[])">
             <summary>
            
             </summary>
             <param name="attributes"></param>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetEvents">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetProperties(System.Attribute[])">
             <summary>
            
             </summary>
             <param name="attributes"></param>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetProperties">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
             <summary>
            
             </summary>
             <param name="pd"></param>
             <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.PropertyGridSettingsComponent.GetAllProperties">
            <summary>
            Helper method to return the PropertyDescriptorCollection or our Dynamic Properties
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.PropertyGridSettingsComponent.DynamicProperty">
            <summary>
            This is the Property class this will be dynamically added to the class at runtime.
            These classes are returned in the PropertyDescriptorCollection of the GetAllProperties
            method of the custom class.
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Gui.Controls.TaskListBox">
            <summary>
            Task list box
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewControler">
            <summary>
            View controler
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.#ctor(Sardauscan.Gui.MainForm,System.Windows.Forms.Panel,System.Windows.Forms.Panel)">
            <summary>
            Ctor
            </summary>
            <param name="mainForm"></param>
            <param name="container"></param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.RegisterView(Sardauscan.Gui.Controls.ApplicationView.View)">
            <summary>
            register a view
            </summary>
            <param name="view"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.ChangeView(Sardauscan.Gui.Controls.ApplicationView.ViewType)">
            <summary>
            change view
            </summary>
            <param name="view"></param>
            <param name="parmeters"></param>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.FireLockChange">
            <summary>
            Fire lock changed event
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.FireViewListChange">
            <summary>
            Fire view list changed event
            </summary>
        </member>
        <member name="M:Sardauscan.Gui.Controls.ApplicationView.ViewControler.FireViewChanged">
            <summary>
            Fire view changed event
            </summary>
        </member>
        <member name="E:Sardauscan.Gui.Controls.ApplicationView.ViewControler.OnLockChange">
            <summary>
            On Lock change 
            </summary>
        </member>
        <member name="E:Sardauscan.Gui.Controls.ApplicationView.ViewControler.OnViewListChange">
            <summary>
            On view list change
            </summary>
        </member>
        <member name="E:Sardauscan.Gui.Controls.ApplicationView.ViewControler.OnViewChanged">
            <summary>
            On view changed
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewControler.LockChangeChange">
            <summary>
            Lock change delegate
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewControler.ViewListChange">
            <summary>
            View list change delegate
            </summary>
        </member>
        <member name="T:Sardauscan.Gui.Controls.ApplicationView.ViewControler.ViewChanged">
            <summary>
            View changed delegate
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ScanTask">
            <summary>
            Scan Task
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ScanTask.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.ScanTask.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="P:Sardauscan.Core.ScanTask.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineAverageSmooth">
            <summary>
            Smooth the scanline with a average
            </summary>
        </member>
        <member name="T:Sardauscan.Core.Geometry.Plane">
            <summary>
            Class describing a Plane
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Geometry.Plane.#ctor(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Ctor
            </summary>
            <param name="point"></param>
            <param name="normal"></param>
        </member>
        <member name="F:Sardauscan.Core.Geometry.Plane.Normal">
            The plane normal 
        </member>
        <member name="F:Sardauscan.Core.Geometry.Plane.Point">
            A point in the plane 
        </member>
        <member name="M:Sardauscan.Core.Geometry.Plane.Intersect(Sardauscan.Core.Geometry.Ray,OpenTK.Vector3@)">
            <summary>
            Is the a Ray intersecting this plane
            </summary>
            <param name="inRay"></param>
            <param name="intersection"></param>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.LineOpenFileTask">
            <summary>
            Open a file 
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ProcessingTask.LineOpenFileTask.Clone">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.ProcessingTask.LineOpenFileTask.ValidFile">
            <summary>
            Clone this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.MeshBuilderByInterpolatedY">
            <summary>
            Reconstruc the Mesh byt interpolating the Scanline points by Y position
            </summary>
        </member>
        <member name="M:Sardauscan.Core.LocationMapper.MapPoints(System.Collections.Generic.List{Sardauscan.Core.Geometry.PixelLocation},System.Drawing.Bitmap,System.Drawing.Color)">
            Lookup the 3D points for each pixel location 
        </member>
        <member name="M:Sardauscan.Core.LocationMapper.CalculateCameraRay(Sardauscan.Core.Geometry.PixelLocation)">
            Calculates a camera back projection Ray for the given image point.  The ray
            will begin at globalPt and extend out into the scene with a vector that would also
            take it through the camera focal point.
            @param globalPt - Point on the camera sensor in global coordinates
            @param ray - The output ray.
        </member>
        <member name="M:Sardauscan.Core.LocationMapper.IntersectLaserPlane(Sardauscan.Core.Geometry.Ray,Sardauscan.Core.Geometry.Point3D@,Sardauscan.Core.Geometry.PixelLocation)">
            Calculate where the ray will hit the laser plane and write it to @p point 
        </member>
        <member name="M:Sardauscan.Core.LocationMapper.CalculateLaserPlane">
            Calculate the plane equation for the plane that the laser is in 
        </member>
        <member name="T:Sardauscan.Core.IO.StlIO">
            <summary>
            STL file IO
            </summary>
        </member>
        <member name="M:Sardauscan.Core.IO.StlIO.Write(System.String,Sardauscan.Core.ScanData)">
            <summary>
            Write ScanData (mesh) to STL
            </summary>
            <param name="file"></param>
            <param name="points"></param>
        </member>
        <member name="T:Sardauscan.Hardware.Com.PortInfo">
            <summary>
            Com port information
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.Com.PortInfo.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="P:Sardauscan.Hardware.Com.PortInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Sardauscan.Hardware.Com.PortInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:Sardauscan.Hardware.DSCameraInfo">
            <summary>
            Class for Direct show Camera information
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraInfo.#ctor(System.Int32,DirectShowLib.DsDevice)">
            <summary>
            Ctor
            </summary>
            <param name="index"></param>
            <param name="dev"></param>
        </member>
        <member name="T:Sardauscan.Core.Reflector">
            <summary>
            Reflection based functions
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Reflector.LoadPlugins">
            <summary>
            Load the plugins
            </summary>
        </member>
        <member name="M:Sardauscan.Core.Reflector.GetSubClassOf(System.Type)">
            <summary>
            Get all the derived type
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Reflector.GetAssignableFrom(System.Type)">
            <summary>
            Get all the ckass that implement a interface
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:Sardauscan.Core.Reflector.GetProviders(System.Type)">
            <summary>
            Get all the hardware providers
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="P:Sardauscan.Core.Reflector.AllTypes">
            <summary>
            List of all Type available 
            </summary>
        </member>
        <member name="T:Sardauscan.Core.ProcessingTask.IqrFilter">
            <summary>
            Make a IQR Filter to remove Scanline noise
            </summary>
        </member>
        <member name="F:Sardauscan.Hardware.DSCameraProxy.m_FilterGraph">
            <summary> graph builder interface. </summary>
        </member>
        <member name="F:Sardauscan.Hardware.DSCameraProxy.m_PictureReady">
            <summary> so we can wait for the async job to finish </summary>
        </member>
        <member name="F:Sardauscan.Hardware.DSCameraProxy.m_videoWidth">
            <summary> Dimensions of the image, calculated once in constructor for perf. </summary>
        </member>
        <member name="F:Sardauscan.Hardware.DSCameraProxy.m_ipBuffer">
            <summary> buffer for bitmap data.  Always release by caller</summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.Dispose">
            <summary> release everything. </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.Click">
            <summary>
            Get the image from the Still pin.  The returned image can turned into a bitmap with
            Bitmap b = new Bitmap(cam.Width, cam.Height, cam.Stride, PixelFormat.Format24bppRgb, m_ip);
            If the image is upside down, you can fix it with
            b.RotateFlip(RotateFlipType.RotateNoneFlipY);
            </summary>
            <returns>Returned pointer to be freed by caller with Marshal.FreeCoTaskMem</returns>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.SetupGraph(DirectShowLib.DsDevice,System.Int32,System.Int32,System.Int16,System.Windows.Forms.Control)">
            <summary> build the capture graph for grabber. </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.CloseInterfaces">
            <summary> Shut down capture </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.DirectShowLib#ISampleGrabberCB#SampleCB(System.Double,DirectShowLib.IMediaSample)">
            <summary> sample callback, NOT USED. </summary>
        </member>
        <member name="M:Sardauscan.Hardware.DSCameraProxy.DirectShowLib#ISampleGrabberCB#BufferCB(System.Double,System.IntPtr,System.Int32)">
            <summary> buffer callback, COULD BE FROM FOREIGN THREAD. </summary>
        </member>
        <member name="M:Sardauscan.Core.ImageProcessor.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Sardauscan.Core.ImageProcessor.Process(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Int32@,System.Int32@,System.Int32@)">
            Detects the laser in x, y pixel coordinates.
            @param debuggingImage - If non-NULL, it will be populated with the processed image that was used to detect the laser locations.
                This can be helpful when debugging laser detection issues.
            @param laserLocations - Output variable to store the laser locations.
            @param maxNumLocations - The maximum number of locations to store in @p laserLocations.
            @param thresholdFactor - Scales the laser threshold by this amount.  default = 1.0
            @return Returns the number of locations written to @p laserLocations.
        </member>
        <member name="T:Sardauscan.Core.ImageProcessor.LaserRange">
            The starting and ending column for a detected laser line in the image 
        </member>
        <member name="T:Sardauscan.Core.OpenGL.GLViewerConfig">
            <summary>
            OpenGL configuration
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.ShowSceneColor">
            <summary>
            Show Scene color
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.BoundingBox">
            <summary>
            Show boundingBox of scene
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.DefaultMaterial">
            <summary>
            Default object material
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.TableRadius">
            <summary>
            Scaner Table Radius
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.TableHeight">
            <summary>
            Scaner Table Height
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.Lightning">
            <summary>
            Lignning enabled
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.Smooth">
            <summary>
            Face Smooth Enabled
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.Projection">
            <summary>
            +Use perspective projection
            </summary>
        </member>
        <member name="F:Sardauscan.Core.OpenGL.GLViewerConfig.Wireframe">
            <summary>
            Display WireFrame
            </summary>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLViewerConfig.LoadDefault">
            <summary>
            Load Default
            </summary>
        </member>
        <member name="M:Sardauscan.Core.OpenGL.GLViewerConfig.SaveDefault">
            <summary>
            Save current as Default
            </summary>
        </member>
    </members>
</doc>
